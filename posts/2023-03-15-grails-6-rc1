---
title: Grails 6 RC1 - Leveling Up the Grails CLI
date: Mar 16, 2023
description: The Grails Foundation™ is excited to announce the RC1 release of Grails framework 6!
author: Puneet Behl
image: grails-blog-index-3.png
---

# [%title]

[%author]

[%date]

The [Grails Foundation™](https://grails.org/foundation/index.html) is excited to announce the RC1 release of Grails framework 6!

## Overview

With the release of Grails 6 RC1, we have introduced a brand new implementation of Grails Command Line Interface (CLI) which is written using Micronaut. The new CLI is much more flexible, fast and easy to maintain. Using the new CLI, you can create Grails applications offline or in areas of limited connectivity, and it is lightning fast. It uses Picocli for building the command-line application, and the Rocker template engine which produces statically typed plain Java objects. 


## Key Concepts

- Application Type

  An application type can be defined as a pre-selected group of features required at minimum to build a specific type of application. For example - a Grails web application is shipped with features such as GSP, Geb, Webdriver, etc.

- Features
  A feature affects the outcome of a generated project such as adding dependencies to build.gradle file, some default configurations, support additional CLI commands, etc. 

Starting with Grails 6, there will not be a Grails CLI wrapper in new projects.  Many of the commands offered by the legacy CLI can be run directly from Gradle.  For example, `./grailsw run-app` can be achieved with `./gradlew bootRun`.  For commands that alter the files of a Grails project like `create-controller`, you will be able to use the globally-installed Grails CLI from within the project folder.  

## Installation

### Installing with SDKMan

The easiest way to install new Grails CLI is with SDKMan, run the following command:

```
sdk install grails 6.0.0-RC1
```
### Download & Install Binary

- Download the latest binary from (here)[https://github.com/grails/grails-forge/releases/tag/v6.0.0-RC1] based on your OS.
- Extract to appropriate directory.
- Create environment variable GRAILS_HOME which points to installation directory, eg: c:/grails
- Update the PATH environment variable, append %GRAILS_HOME%\bin.

### Use SDKMan To Build & Install From Source 

- Clone the repository as follows:
git clone https://github.com/grails/grails-forge.git
Build dist using the command `./gradlew :grails-cli:assembleDist`.
Copy & Extract the archive from grails-forge/grails-cli/build/distributions/grails-cli.*.zip to the user home directory.
Use SDKMan, to install dev version using the following command:
```
sdk install grails dev ~/grails-cli/
sdk use grails dev
```

## The Previous Grails CLI & Its Limitations

The Previous Grails CLI uses YAML based configuration files which are not very extensible when it comes to customizing it. Also, it is very difficult to use automation tools to auto-update dependencies and the process of testing the profile is very complicated.

## The Grails Profiles & ApplicationType in the New CLI 

The Grails Profiles such as web, plugin, react, etc. are supported by means of application-types. Currently, we only support following application-types:

- Web
- REST API
- Web Plugin
- Plugin

We will soon add support for REST API Plugin, ReactJS and AngularJS application types.

## The Grails Scaffolding Plugin

The Grails Scaffolding plugin which defines commands such as generate-all and generate-controller will not work because it uses the command scripts. Grails 3 has introduced the concept of ApplicationCommand which has similar abilities as scripts in regards to retrieving arguments, template generation, file access, and model building. Please read the Grails documentation for (creating custom commands)[https://docs.grails.org/latest/guide/commandLine.html#creatingCustomCommands].

## The Road Ahead..

- New Grails Forge Website is coming soon
- Supporting more application types
- Adding more features such as Security


Support for Grails Scaffolding Plugin With Grails 6
